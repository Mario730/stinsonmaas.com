{"version":3,"file":"component---src-pages-index-js-a4de4fa8f72435de88ae.js","mappings":"6KAEWA,EAAc,qCAGdC,EAAQ,8BCwCnB,MAlCeC,IAA8B,IAA7B,UAAEC,EAAS,SAAEC,GAAUF,EAErC,SAASG,EAAYC,GAAiB,IAAhB,KAAEC,EAAI,KAAEC,GAAKF,EACjC,OAAIC,IAASJ,EACJM,EAAAA,cAAA,UAAIA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAIH,EAAMI,UAAWZ,GAAcO,IACxCE,EAAAA,cAAA,UAAIA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAIH,GAAOD,GACrC,CAEA,SAASM,EAAiBC,GAAiB,IAAhB,KAAEP,EAAI,KAAEC,GAAKM,EACtC,OAAIP,IAASJ,EACJM,EAAAA,cAAA,MAAIG,UAAWX,GAAOQ,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAIH,EAAMI,UAAWZ,GAAcO,IAC1DE,EAAAA,cAAA,MAAIG,UAAWX,GAAOQ,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAIH,GAAOD,GACvD,CAEA,OACEE,EAAAA,cAAA,OAAKG,UDzBc,mCC0BjBH,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,IAAIC,UDzBH,8BCyBoB,QAAKH,EAAAA,cAAA,WAAK,gBACxCA,EAAAA,cAAA,MAAIG,UDzBU,mCC0BZH,EAAAA,cAACJ,EAAY,CAACE,KAAK,QAAQC,KAAK,WAChCC,EAAAA,cAACJ,EAAY,CAACE,KAAK,SAASC,KAAK,YACjCC,EAAAA,cAACI,EAAiB,CAACN,KAAK,UAAUC,KAAK,eAG3CC,EAAAA,cAAA,YACGL,GAEHK,EAAAA,cAAA,eAGI,C,+CCtBV,IAhBYP,IAAgB,IAAf,MAAEa,GAAOb,EACpB,MAAMc,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACER,EAAAA,cAAA,aAAQM,EAAM,MAAIC,EAAKE,KAAKC,aAAaJ,MAAc,C,2GCV3D,MAmCaK,EAAOA,IAAMX,EAAAA,cAACY,EAAAA,EAAG,CAACN,MAAM,SAErC,UArCkBb,IAAe,IAAd,KAAEc,GAAMd,EACzB,OACEO,EAAAA,cAACa,EAAAA,EAAM,CAACnB,UAAY,QAClBM,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,UAEEO,EAAKO,OAAOC,MAAMC,KAAKC,GACrBjB,EAAAA,cAAA,WAASkB,IAAKD,EAAKE,IACjBnB,EAAAA,cAAA,UAAIA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAE,SAAWe,EAAKG,YAAYC,MAASJ,EAAKG,YAAYd,QAClEN,EAAAA,cAAA,SAAG,WAASiB,EAAKG,YAAYE,MAC7BtB,EAAAA,cAAA,SAAIiB,EAAKM,aAKR,C","sources":["webpack://stinsonmaas.com/./src/components/layout.module.css","webpack://stinsonmaas.com/./src/components/layout.js","webpack://stinsonmaas.com/./src/components/seo.js","webpack://stinsonmaas.com/./src/pages/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var currentPage = \"layout-module--current-page--30088\";\nexport var logo = \"layout-module--logo--ff776\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var split = \"layout-module--split--da352\";","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport {\n  container,\n  // heading,\n  navLinks,\n  split,\n  currentPage,\n  logo\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n\n  function PageLinkTest({ page, link}) {\n    if (page === pageTitle) {\n      return <li><Link to={link} className={currentPage}>{page}</Link></li>;\n    } else return <li><Link to={link}>{page}</Link></li>;\n  }\n\n  function SplitPageLinkTest({ page, link}) {\n    if (page === pageTitle) {\n      return <li className={split}><Link to={link} className={currentPage}>{page}</Link></li>;\n    } else return <li className={split}><Link to={link}>{page}</Link></li>;\n  }\n  \n  return (\n    <div className={container}>\n      <nav>\n        <Link to=\"/\" className={logo}>Mario<br/>Stinson-Maas</Link>\n        <ul className={navLinks}>\n          <PageLinkTest page=\"About\" link=\"/about\" />\n          <PageLinkTest page=\"Resume\" link=\"/resume\" />\n          <SplitPageLinkTest page=\"Contact\" link=\"/contact\" />\n        </ul>\n      </nav>\n      <main>\n        {children}\n      </main>\n      <footer>\n\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <title>{title} | {data.site.siteMetadata.title}</title>\n  )\n}\n\nexport default Seo","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout pageTitle = \"Home\">\n      <h2>Welcome!</h2>\n      <ul>\n      {\n        data.allMdx.nodes.map((node) => (\n          <article key={node.id}>\n            <h2><Link to={`/post/${node.frontmatter.slug}`}>{node.frontmatter.title}</Link></h2>\n            <p>Posted: {node.frontmatter.date}</p>\n            <p>{node.excerpt}</p>\n          </article>\n        ))\n      }\n      </ul>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { frontmatter: { date: DESC }}) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n        }\n        id\n        excerpt\n      }\n    }\n  }\n`\n\nexport const Head = () => <Seo title=\"Home\"/>\n\nexport default IndexPage"],"names":["currentPage","split","_ref","pageTitle","children","PageLinkTest","_ref2","page","link","React","Link","to","className","SplitPageLinkTest","_ref3","title","data","useStaticQuery","site","siteMetadata","Head","Seo","Layout","allMdx","nodes","map","node","key","id","frontmatter","slug","date","excerpt"],"sourceRoot":""}