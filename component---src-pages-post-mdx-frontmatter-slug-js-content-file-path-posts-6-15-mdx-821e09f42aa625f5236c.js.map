{"version":3,"file":"component---src-pages-post-mdx-frontmatter-slug-js-content-file-path-posts-6-15-mdx-821e09f42aa625f5236c.js","mappings":"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","sources":["webpack://stinsonmaas.com/./posts/6-15.mdx","webpack://stinsonmaas.com/./src/pages/post/{mdx.frontmatter__slug}.js","webpack://stinsonmaas.com/./src/components/layout.module.css","webpack://stinsonmaas.com/./src/components/layout.js","webpack://stinsonmaas.com/./src/components/seo.js","webpack://stinsonmaas.com/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"After working on this site for a bit, I am now ready to make my first post!\\nI plan on adding projects of mine as posts, like music and code that I want to share.\\nI have a lot of work to do for the site to feel more complete, but I am very excited\\nfor it.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"img\", {\n    src: \"/ss1.png\",\n    width: \"80%\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Snapshot of site as of 6/15\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"Thank you so much for reading, and I hope to publish more posts soon!\"), \"\\n\", React.createElement(_components.p, null, \"Mario Stinson-Maas\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/mariostinson-maas/Documents/stinsonmaas/stinsonmaas.com/posts/6-15.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nconst PostPage = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(\"br\"), children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nPostPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var currentPage = \"layout-module--current-page--30088\";\nexport var logo = \"layout-module--logo--ff776\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var split = \"layout-module--split--da352\";","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport {\n  container,\n  // heading,\n  navLinks,\n  split,\n  currentPage,\n  logo\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n\n  function PageLinkTest({ page, link}) {\n    if (page === pageTitle) {\n      return <li><Link to={link} className={currentPage}>{page}</Link></li>;\n    } else return <li><Link to={link}>{page}</Link></li>;\n  }\n\n  function SplitPageLinkTest({ page, link}) {\n    if (page === pageTitle) {\n      return <li className={split}><Link to={link} className={currentPage}>{page}</Link></li>;\n    } else return <li className={split}><Link to={link}>{page}</Link></li>;\n  }\n  \n  return (\n    <div className={container}>\n      <nav>\n        <Link to=\"/\" className={logo}>Mario<br/>Stinson-Maas</Link>\n        <ul className={navLinks}>\n          <PageLinkTest page=\"Posts\" link=\"/post\" />\n          <PageLinkTest page=\"About\" link=\"/about\" />\n          <PageLinkTest page=\"Resume\" link=\"/resume\" />\n          <SplitPageLinkTest page=\"Contact\" link=\"/contact\" />\n        </ul>\n      </nav>\n      <main>\n        {children}\n      </main>\n      <footer>\n\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <title>{title} | {data.site.siteMetadata.title}</title>\n  )\n}\n\nexport default Seo","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","_provideComponents","components","React","src","width","wrapper","MDXLayout","PostPage","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","currentPage","split","PageLinkTest","page","link","Link","to","className","SplitPageLinkTest","_ref3","useStaticQuery","site","siteMetadata","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}